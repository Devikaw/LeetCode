
Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.
Note: You may not slant the container and n is at least 2.

Example:

Input: [1,8,6,2,5,4,8,3,7]
Output: 49

Solution:

class Solution {
    public int maxArea(int[] height) {
        int max_ht = 0;
        int b = 0;
        int l = 0;
        int area = 0;
        int max_area = 0;
        for(int i = 0; i<height.length; i++){
            for(int j = i+1; j<height.length; j++){
                b = (height[i] < height[j])? height[i] : height[j];
                l = j-i;
                area = b * l;
                if(area > max_area){
                    max_area = area;
                }
            }
        }
        return max_area;
    }
}

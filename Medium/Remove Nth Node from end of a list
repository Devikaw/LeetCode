Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next == null && n>0){
            return null;
        }
        ListNode ptr = head;
        ListNode walker = head;
        ListNode reaper = walker;
        for(int i=1; i<n; i++){
            head = head.next;
        }
        while(head.next != null){
            reaper = walker;
            walker = walker.next;
            head = head.next;
        }
        if(walker == ptr){
            ptr = ptr.next;
            return ptr;
        }
        reaper.next = walker.next;
        walker.next = null;
        return ptr;
    }
}

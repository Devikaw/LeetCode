A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid.

Example 1:

Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right
Example 2:

Input: m = 7, n = 3
Output: 28

Solution:

class Solution {
    public int uniquePaths(int m, int n) {
        int[][] path = new int[n][m];
        for(int i=0; i<n; i++){
            path[i][0] = 1;
        }
        for(int j=0; j<m; j++){
            path[0][j] = 1;
        }
        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                path[i][j] = path[i-1][j] + path[i][j-1];
            }
        }
        return path[n-1][m-1];
    }
}

public static int minCOntainerSize(int[] containers, int d) {
        int len = containers.length;
        if(d > len) return -1;
        int[][] dp = new int[len][d+1];
        for(int i=0; i<len; i++)
            dp[i][1] = i==0 ? containers[0] : Math.max(dp[i-1][1], containers[i]);
        for(int k=2; k<=d; k++)
            for(int i=k-1; i<len; i++){
                dp[i][k] = Integer.MAX_VALUE;
                int localMax = containers[i];
                for(int s=i-1; s>=k-2; s--){
                    dp[i][k] = Math.min(dp[i][k], dp[s][k-1] + localMax);
                    localMax = Math.max(localMax, containers[s]);
                }
            }
        return dp[len-1][d];
    }

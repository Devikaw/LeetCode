Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"

Solution:

class Solution {
    public String longestPalindrome(String s) {
        if(s==null || s.length() == 0) return "";
        int start = 0;
        int end = 0;
        for(int i=0; i<s.length(); i++){
            int l1 = check_palindrome(s, i, i);
            int l2 = check_palindrome(s, i, i+1);
            int strlen = Math.max(l1,l2);
            if(strlen > end-start){
                start = i - ((strlen-1)/2);
                end = i + (strlen/2);
            }
        }
        return s.substring(start,end+1);
    }
    public int check_palindrome(String s, int left, int right){
        while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right)){
            left--;
            right++;
        }
        return right-left-1;
    }
}

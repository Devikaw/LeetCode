Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

Solution:

class Solution {
    public int maxProduct(int[] nums) {
        if(nums.length==1){
            return nums[0];
        }
        int result = nums[0];
        int min_product = nums[0];
        int max_product = nums[0];
        int temp1, temp2;
        for(int i=1; i<nums.length; i++){
            temp1 = max_product;
            temp2 = min_product;
            max_product = Math.max(Math.max(temp1*nums[i],temp2*nums[i]), nums[i]);
            min_product = Math.min(Math.min(temp1*nums[i],temp2*nums[i]), nums[i]);
            result = Math.max(result,max_product);
        }
        return result;
    }
}

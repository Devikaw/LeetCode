Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
Example:

Input: [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6

Solution:

class Solution {
    public int trap(int[] height) {
        if(height==null || height.length==0){
            return 0;
        }
        int max_water = 0;
        int[] maxleft = new int[height.length];
        maxleft[0] = height[0];
        for(int i=1; i<height.length; i++) {
        	maxleft[i] = Math.max(height[i], maxleft[i-1]);
        }
        int[] maxright = new int[height.length];
        maxright[height.length-1] = height[height.length-1];
        for(int i=height.length-2; i>=0; i--) {
        	maxright[i] = Math.max(height[i], maxright[i+1]);
        }
        for(int i=0; i<height.length; i++) {
        	max_water += (Math.min(maxleft[i], maxright[i]))-height[i];
        }
		return max_water;
    }
}
